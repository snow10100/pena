from langgraph.graph import add_messages
from langchain_core.messages import BaseMessage
from typing import TypedDict, Annotated, Sequence, List
import operator

class AgentState(TypedDict):
    messages: Annotated[Sequence[BaseMessage], add_messages]

class RecoderOptions(TypedDict):
    report: str
    generate_final_report: bool
    file_names: List[str]

# Define the state structure
class PentestState(TypedDict):
    messages: Annotated[list, operator.add]
    current_step: str
    pentest_results: dict
    evaluation: str
    recorder_options: RecoderOptions

